spring.application.name=StudentMarket

# ===============================
# DATASOURCE (MySQL)
# ===============================
spring.datasource.url=jdbc:mysql://localhost:3306/studentmarket?useSSL=true&requireSSL=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

server.error.whitelabel.enabled=true
spring.thymeleaf.check-template-location=false

# ===============================
# JPA / Hibernate
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# ===============================
# Logging SQL & Transaction
# ===============================
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.transaction=DEBUG
logging.level.org.springframework.transaction=TRACE

# Dùng JDBC cho session
spring.session.store-type=jdbc

# KHÔNG tự tạo schema session (vì bạn đã tạo bằng SQL)
spring.session.jdbc.initialize-schema=never

# (Tuỳ chọn) timeout
server.servlet.session.timeout=30m

# LƯU Ý: nếu có dòng spring.sql.init.mode=..., hãy để nguyên giá trị
# hoặc xóa/ghi hẳn sang dòng comment như dưới, không comment cuối dòng!
# spring.sql.init.mode=never
app.upload-dir=uploads

#server.error.whitelabel.enabled=false
server.error.path=/error

# Ẩn thông điệp/stacktrace trên trang lỗi (giảm lộ info)
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-exception=false
server.error.include-stacktrace=never
# ===============================
# Google OAuth2 Login
# ===============================
spring.security.oauth2.client.registration.google.client-id=599104742465-q4bif2b1guei6nfdgphq40u74ph4hgmi.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
